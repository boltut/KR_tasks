//Программа, которая открывает файл, и считает там символы, слова, строки
//и выводит их количество на экран

#include <stdio.h>
#include <stdlib.h>
#define IN 1 //внутри слова
#define OUT 0// снаружи слова

void count_ch_wd_ln(FILE *fp);

int main (int argc, char *argv[])
{
  
  FILE *fp;
  
  //Проверяю наличие аргумента,
  //выхожу из программы, в случае если аргументов нет
  //либо их больше одного
  fp = fopen(argv[1], "r");
  if (argc != 2) {
    printf("\nPlease, enter file name\n");
    exit(1);
  }
  if (fp == NULL) {
    printf("\nOpening file - error\n");
  } 
  else {
    printf("\nOpening file - success\n");
    count_ch_wd_ln(fp);
    fclose(fp);
  }

return 0;  

}
// Функция которая считает кол-во
// символов, слов и строк и печатает результат 
void count_ch_wd_ln(FILE *fp) 
{
  // объявляю переменные в которых будут копиться символы, 
  // слова, строки и статус потока (в\вне)
  // обращаю внимание, что в nc буду писать _все_
  // символы, включая пробелы, табы и '\n', так как
  // в задании сказано искать символы, а не только буквы
  int nc, nw, nl, state;
  
  //здесь будет хранится очередной символ считанный из файла
  char c;

  //в переменную со строками (nl) кладу 1, т.к опытным путем установил,
  //что строк всегда считается на одну меньше
  //видимо из-за того, что последняя строка в файле заканчивается
  //сразу EOF, а не очередным '\n'
  nl = 1;
  state = OUT;
  nw = nc = 0;

  while((c = getc(fp)) != EOF) { 
      ++nc;
    if(c == '\n'){
      ++nl;
    }
    if(c == ' ' || c == '\n' || c == '\t') {
      state = OUT;
    }
    else if(state == OUT) {
      state = IN;
      ++nw;
    }
  }
  printf("\nChars: %d\n", nc);
  printf("Words: %d\n", nw);
  printf("Lines: %d\n\n", nl); 
}

